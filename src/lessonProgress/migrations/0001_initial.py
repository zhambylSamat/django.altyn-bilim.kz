# Generated by Django 2.1 on 2019-11-08 10:33

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('materials', '0001_initial'),
        ('groupsAndLessons', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='GroupStudentVisit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now=True)),
                ('lesson_group', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='groupsAndLessons.LessonGroup')),
            ],
            options={
                'ordering': ['-created_date'],
            },
        ),
        migrations.CreateModel(
            name='GroupStudentVisitHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('origin_id', models.IntegerField()),
                ('lesson_group_id', models.IntegerField()),
                ('created_date', models.DateTimeField()),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('is_delete', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-updated_date'],
            },
        ),
        migrations.CreateModel(
            name='LessonAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_video_access', models.BooleanField(default=False)),
                ('is_test_access', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now=True)),
                ('lesson_group_student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='groupsAndLessons.LessonGroupStudent')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_date'],
            },
        ),
        migrations.CreateModel(
            name='LessonActionHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('origin_id', models.IntegerField()),
                ('user_id', models.IntegerField()),
                ('lesson_group_student', models.IntegerField()),
                ('is_video_access', models.BooleanField(default=False)),
                ('is_test_access', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField()),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-updated_date'],
            },
        ),
        migrations.CreateModel(
            name='StudentVisit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attendance', models.BooleanField(default=False)),
                ('home_work', models.DecimalField(decimal_places=1, max_digits=2)),
                ('group_student_visit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lessonProgress.GroupStudentVisit')),
                ('lesson_group_student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='groupsAndLessons.LessonGroupStudent')),
            ],
            options={
                'ordering': ['group_student_visit'],
            },
        ),
        migrations.CreateModel(
            name='StudentVisitHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('origin_id', models.IntegerField()),
                ('group_student_visit_id', models.IntegerField()),
                ('lesson_group_student_id', models.IntegerField()),
                ('attendance', models.BooleanField(default=False)),
                ('home_work', models.DecimalField(decimal_places=1, max_digits=2)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-updated_date'],
            },
        ),
        migrations.CreateModel(
            name='TopicQuizMark',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('practice', models.IntegerField()),
                ('theory', models.IntegerField()),
                ('created_date', models.DateTimeField(auto_now=True)),
                ('student_plan', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='groupsAndLessons.StudentPlan')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_date'],
            },
        ),
        migrations.CreateModel(
            name='TopicQuizMarkHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teacher_id', models.IntegerField()),
                ('student_plan_id', models.IntegerField()),
                ('practice', models.IntegerField()),
                ('theory', models.IntegerField()),
                ('created_date', models.DateTimeField()),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('is_delete', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-updated_date'],
            },
        ),
        migrations.CreateModel(
            name='TrialTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='materials.Subject')),
            ],
            options={
                'ordering': ['student', 'subject'],
            },
        ),
        migrations.CreateModel(
            name='TrialTestMark',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.IntegerField()),
                ('date', models.DateField()),
                ('created_date', models.DateTimeField(auto_now=True)),
                ('trial_test', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lessonProgress.TrialTest')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_date'],
            },
        ),
        migrations.CreateModel(
            name='TrialTestMarkHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('origin_id', models.IntegerField()),
                ('user_id', models.IntegerField()),
                ('trial_test_id', models.IntegerField()),
                ('mark', models.IntegerField()),
                ('date', models.DateField()),
                ('created_date', models.DateTimeField()),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-updated_date'],
            },
        ),
    ]
